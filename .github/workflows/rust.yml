name: Rust

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      fail-fast: true
      max-parallel: 3
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install GStreamer build and runtime dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good
    - name: Install GStreamer build and runtime dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install pkgconfiglite
        choco install gstreamer
        echo "::set-env name=PKG_CONFIG_PATH::c:\\gstreamer\\1.0\\x86_64\\lib\\pkgconfig$PKG_CONFIG_PATH"
    - name: Install GStreamer build and runtime dependencies (macOS)
      if: runner.os == 'macOS'
      run: brew install gstreamer gst-plugins-base gst-plugins-good
    - name: Install latest Rust stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Clippy check
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Release build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release
    - name: Strip debugging symbols from binary
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: strip target/release/packsquash
    - name: Upload executable artifact
      uses: actions/upload-artifact@v2
      with:
        name: 'PackSquash executable'
        path: target/release/packsquash
