[package]
name = "packsquash"
description = "Minecraft resource and data pack optimizer"
version = "0.3.1"
authors = ["Alejandro \"AlexTMjugador\" Gonz√°lez"]
repository = "https://github.com/ComunidadAylas/PackSquash"
license = "AGPL-3.0-or-later"
readme = "../../README.md"
publish = false
edition = "2021"
# Hack to make (DEP_PACKSQUASH_)OPTIONS_FILE_JSON_SCHEMA environment variable be available
# to downstream build scripts. See:
# https://github.com/rust-lang/cargo/issues/3544
links = "packsquash"

[dependencies]
packsquash_options = { version = "0.3.1", path = "../packsquash_options" }

enumset = "1.0.12"
enum-map = "2.4.1"
strum = "0.24.1"
itertools = "0.10.5"
thiserror = "1.0.37"

globset = { version = "0.4.9", default-features = false }
patricia_tree = "0.4.0"
ahash = "0.8.1"
# TODO delete this if the blockstate property list stops using maps
phf = { version = "0.11.1", features = ["macros"] }
tinyvec = { version = "1.6.0", features = ["alloc", "rustc_1_55", "serde"] }

rayon = "1.5.3"
parking_lot = { version = "0.12.1", features = ["hardware-lock-elision"] }
once_cell = { version = "1.15.0", features = ["parking_lot"] }

log = { version = "0.4.17", features = ["kv_unstable"] }

walkdir = "2.3.2"
memmap2 = "0.5.7"
path-clean = "0.1.0"

serde = { version = "1.0.147", features = ["derive"] }
serde_path_to_error = "0.1.8"

serde_json = "1.0.87"
json_comments = "0.2.1"

spng = { version = "0.2.0-alpha.2", default-features = false }
png = "0.17.7"
rgb = "0.8.34"
imagequant = { version = "4.0.4", default-features = false, features = ["threads"] }
oxipng = { version = "6.0.1", default-features = false, features = ["zopfli", "parallel"] }

symphonia = { version = "0.5.1", default-features = false, features = ["wav", "isomp4", "flac", "pcm", "mp3", "aac"] }
vorbis_rs = "0.1.0"
dasp_signal = { version = "0.11.0", default-features = false }
dasp_interpolate = { version = "0.11.0", features = ["sinc"] }
dasp_ring_buffer = "0.11.0"
dasp_frame = "0.11.0"
rubato = "0.12.0"
optivorbis = "0.1.2"

glsl = "6.0.1"

java-properties = { version = "1.4.1", optional = true }

tempfile = "3.3.0"
crc32fast = "1.3.2"
zopfli = "0.7.1"

const-random = "0.1.15"
aes = "0.7.5"
fpe = "0.5.1"
uuid = "1.2.1"
entropy = "0.4.1"
rand_xoshiro = "0.6.0"
onig = { version = "6.4.0", default-features = false }

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
wmi = { version = "0.11.3", default-features = false, features = ["time"] }

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.9.3"
mach = "0.3.2"

[build-dependencies]
git2 = { version = "0.15.0", default-features = false }
time = { version = "0.3.15", default-features = false, features = ["std"] }
schemars = { version = "0.8.11", default-features = false }
serde_json = "1.0.87"
packsquash_options = { version = "0.3.1", path = "../packsquash_options" }

[dev-dependencies]
pretty_assertions = "1.3.0"

criterion = { version = "0.3.6", features = ["html_reports"] }
tar = { version = "0.4.38", default-features = false }
xz2 = "0.1.7"

# criterion-perf-events depends on perfcnt, and perfcnt is so tightly coupled with
# the x86 architecture that it needs to execute x86-specific instructions. The perf
# framework is Linux-only, too, so benchmarks based on criterion-perf-events can only
# run on x86 Linux systems
[target.'cfg(all(target_os = "linux", any(target_arch = "x86", target_arch = "x86_64")))'.dev-dependencies]
criterion-perf-events = "0.2.0"
perfcnt = "0.8.0"

[features]
# Support all kinds of files added by modifications by default
default = ["mod-support"]

# This feature will include support for all the mods that PackSquash will ever support
mod-support = ["optifine-support", "mtr3-support"]

optifine-support = ["java-properties"]
mtr3-support = []

[lib]
bench = false

[[bench]]
name = "benches"
harness = false
