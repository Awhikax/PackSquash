cargo-features = ["strip"]

[package]
name = "packsquash"
description = "Minecraft resource and data pack optimizer"
version = "0.3.0"
authors = ["Alejandro \"AlexTMjugador\" González"]
repository = "https://github.com/ComunidadAylas/PackSquash"
license = "AGPL-3.0"
readme = "README.md"
publish = false
edition = "2021"

[dependencies]
bytes = "1.1.0"
globset = "0.4.8"
enumset = { version = "1.0.7", features = ["serde"] }
indexmap = { version = "1.7.0", default-features = false, features = ["serde-1"] }
thiserror = "1.0.30"
ahash = "0.7.4"

num_cpus = "1.13.0"
sysinfo = { version = "0.20.4", default-features = false }
walkdir = "2.3.2"

tokio = { version = "1.12.0", default-features = false, features = ["rt-multi-thread", "macros", "io-util", "fs", "sync"] }
tokio-util = { version = "0.6.8", default-features = false, features = ["codec", "io"] }
tokio-stream = { version = "0.1.7", default-features = false }
futures = { version = "0.3.17", default-features = false }

getopts = "0.2.21"

serde = { version = "1.0.130", features = ["derive"] }
toml = "0.5.8"

serde_json = "1.0.68"
json_comments = "0.2.0"
jsonpath_lib = "0.3.0"

spng = { version = "0.2.0-alpha.2", default-features = false }
png = "0.17.2"
rgb = "0.8.27"
imagequant = "3.1.0"
oxipng = { version = "5.0.0", default-features = false, features = ["zopfli"] }

gstreamer = { version = "0.17.4", default-features = false }
gstreamer-app = { version = "0.17.2", default-features = false, features = ["v1_10"] }

glsl = "6.0.1"

java-properties = { version = "1.4.0", optional = true }

tempfile = "3.2.0"
crc32fast = "1.2.1"
zopfli = "0.4.0"

const-random = "0.1.13"
aes = "0.7.5"
fpe = "0.5.0"
uuid = "0.8.2"
entropy = "0.4.1"
rand_xoshiro = "0.6.0"

color-backtrace = { version = "0.5.1", default-features = false, optional = true }

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
wmi = "0.9.0"

[target.'cfg(target_os = "macos")'.dependencies]
core-foundation = "0.9.1"
mach = "0.3.2"

[patch.crates-io]
# Use our fork of oxipng that removes a dependency and an unneeded sanity check
oxipng = { git = "https://github.com/ComunidadAylas/oxipng", branch = "packsquash" }
# Use our fork of glsl that allows it to parse files that use DOS-style CRLF line
# endings, prevalent on Windows environments, fixes the #elif preprocessor directive
# not being parsed, improves minification and fixes some incorrect transpiling
# Related PRs:
# https://github.com/phaazon/glsl/pull/138
# https://github.com/ComunidadAylas/glsl/pull/1
glsl = { git = "https://github.com/ComunidadAylas/glsl", branch = "packsquash" }
# Use our fork of Zopfli that includes streaming support and the ability to change
# the number of compression iterations
zopfli = { git = "https://github.com/ComunidadAylas/zopfli", branch = "packsquash" }

[build-dependencies]
vergen = { version = "5.1.15", default-features = false, features = ["cargo", "git"] }
time = { version = "0.3.3", default-features = false, features = ["std"] }

[dev-dependencies]
tokio-test = "0.4.2"

[features]
# Support all kinds of files added by modifications and fancy panic messages by default
default = ["mod-support", "color-backtrace"]
# This feature will include support for all the mods that PackSquash will ever support
mod-support = ["optifine-support"]

optifine-support = ["java-properties"]

[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
strip = "symbols"

[package.metadata.deb]
maintainer = "Alejandro González <AlexTMjugador@users.noreply.github.com>"
copyright = "PackSquash developers"
license-file = ["LICENSE", "0"]
extended-description-file = "target/debian/extended_package_description.txt"
section = "utils"
# For each release with the same version number (shouldn't be too many),
# increment this, and change APT repo action
revision = "4"
# Sadly, automatic dependency detection is suboptimal because it pulls transitive
# dependencies and does not work fine when cross-compiling.
#
# The value for this depends key is manually deduced as follows:
# - ./build_deb.sh is used, preferably on a CI runner, to get all the relevant dependencies
#   and their versions.
# - The list is then manually tweaked to add GStreamer plugins. The version of these plugins
#   should match the whatever is output by ./build_deb.sh, barring any ending revision
#   (whatever is after the dash in the version string).
# This process must be repeated:
# - Each time a CI runner is updated in a way that may change these versions (distro
#   update).
# - Before each release in the APT repository, just in case, to check that everything's
#   right.
#
# The dependency list generated by ./build_deb.sh can be seen on the workflow run logs for
# each CI run.
#
# GStreamer plugins are downgraded to 1.14.0 because that version is extremely similar to
# 1.14.5, Debian Buster still uses 1.14.4, and the arm64 arch still uses 1.14.0 sometimes.
#
# Remove dependency on libgcc-s1 because it doesn't exist on Debian Buster, and it doesn't
# seem to be necessary anyway. This is extremely hacky, because we can't rely on GCC keeping
# things like that. We just pray that the GCC version is old enough and that no C dependency
# breaks things...
depends = """
libc6 (>= 2.27), libglib2.0-0 (>= 2.31.8), libgstreamer-plugins-base1.0-0 (>= 1.10.0), \
libgstreamer1.0-0 (>= 1.0.0), gstreamer1.0-plugins-bad (>= 1.14.0), \
gstreamer1.0-plugins-base (>= 1.14.0), gstreamer1.0-plugins-good (>= 1.14.0)"""
